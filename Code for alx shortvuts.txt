#include "main.h"

/**
*
* _isalpha - determine whether or not input is alpha
*
* Return: 1 if c is alpha, 0 if c is not alpha
*
*/

int _isalpha(int c)
{
	if( (c >= 65 && c <= 90) || (c >= 97 && c <= 122) )
		return (1);
	return (0);
}

____________________________________________________________________________

#include "main.h"

/**
*
* parent_sign- determine sign of number
* @n: operand to be determined and assigned a sign
* Return: 1 if n is +ve, -1 if n is negative, zero if n is 0 
*
*/

int print_sign(int n)
{
	if (n > 0)
	{
		_putchar('+');
		return (1);
	}
	else if (n < 0)
	{
		_putchar('-');
		return (-1);
	}
	else
	{
		_putchar('0');
		return (0);
	}
}

________________________________________________________________________________

#include "main.h"

/**
*
* _abs - returns the absolute unsigned value of a signed int
* 
* @n: takes in integer type input for function
* Return: unsigned int (Success) 
*
*/

int _abs(int n)
{
	if (n < 0)
		n = (-1) * n;
	return (n);
}

____________________________________________________________________________

#include "main.h"

/**
 * print_last_digit - print last digit of a number.
 *
 * @n: takes number input
 *
 * Return: lastDigit
*/

int print_last_digit(int n)
{
	int lastDigit;

	if (n < 0)
		lastDigit = -1 * (n % 10);
	else
		lastDigit = n % 10;

	_putchar(lastDigit + '0');
	return (lastDigit);
}
__________________________________________________________________

#include "main.h"

/**
 * _strncat - a function that concatenates two strings.
 *
 * @dest: pointer to destination input
 * @src: pointer to source input
 * @n: most number of bytes from @src
 *
 * Return: @dest
*/

char *_strncat(char *dest, char *src, int n)
{
	int c, i;

	c = 0;

	while (dest[c])
		c++;

	for (i = 0; i < n && src[i] != '\0'; i++)
		dest[c + i] = src[i];

	dest[c + i] = '\0';

	return (dest);
}
